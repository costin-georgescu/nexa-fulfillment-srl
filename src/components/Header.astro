---
const normalizePath = (path: string | undefined): string => {
  if (!path || path === '/') return '/';
  return path.replace(/\/+$/, '');
};

const currentPath = normalizePath(Astro.url.pathname);

const isActive = (url: string): boolean => normalizePath(url) === currentPath;
---

<!-- ============================================ --><!--                 Navigation                   --><!-- ============================================ -->
<header id='cs-navigation'>
  <div class='cs-container'>
    <!--Nav Logo-->
    <a href='/' class='cs-logo' aria-label='back to home'>
      <img
        src='/public/assets/images/nexa-logo.jpg'
        alt='logo'
        width='210'
        height='29'
        aria-hidden='true'
        decoding='async'
      />
    </a>
    <!--Navigation List-->
    <nav class='cs-nav' role='navigation'>
      <!--Mobile Nav Toggle-->
      <button class='cs-toggle' aria-label='mobile menu toggle'>
        <div class='cs-box' aria-hidden='true'>
          <span class='cs-line cs-line1' aria-hidden='true'></span>
          <span class='cs-line cs-line2' aria-hidden='true'></span>
          <span class='cs-line cs-line3' aria-hidden='true'></span>
        </div>
      </button>
      <!-- We need a wrapper div so we can set a fixed height on the cs-ul in case the nav list gets too long from too many dropdowns being opened and needs to have an overflow scroll. This wrapper acts as the background so it can go the full height of the screen and not cut off any overflowing nav items while the cs-ul stops short of the bottom of the screen, which keeps all nav items in view no matter how mnay there are-->
      <div class='cs-ul-wrapper'>
        <ul id='cs-expanded' class='cs-ul' aria-expanded='false'>
          <li class='cs-li'>
            <a
              href='/'
              class={`cs-li-link${isActive('/') ? ' cs-active' : ''}`}
            >
              ACAS«ç
            </a>
          </li>
          <li class='cs-li'>
            <a
              href='/services/'
              class={`cs-li-link${isActive('/services/') ? ' cs-active' : ''}`}
            >
              SERVICII
            </a>
          </li>
          <li class='cs-li'>
            <a
              href='/about/'
              class={`cs-li-link${isActive('/about/') ? ' cs-active' : ''}`}
            >
              DESPRE NOI
            </a>
          </li>
          <li class='cs-li hidden-desktop'>
            <a href='/#contact-1105' class='cs-li-link'>CONTACT</a>
          </li>
        </ul>
      </div>
    </nav>
    <a href='/#contact-1105' class='cs-button-solid cs-nav-button'>Contact</a>
  </div>
</header>

<style lang='less'>
  /*-- -------------------------- -->
<---     Mobile Navigation      -->
<--- -------------------------- -*/

  /* Mobile - 1023px */
  @media only screen and (max-width: 63.9375rem) {
    body {
      &.cs-open {
        overflow: hidden;
      }
    }

    #cs-navigation {
      width: 100%;
      /* prevents padding and border from affecting height and width */
      box-sizing: border-box;
      padding: (12/16rem) (16/16rem);
      background-color: var(--backgroundDark);
      box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
      position: fixed;
      z-index: 10000;

      &:before {
        content: '';
        width: 100%;
        height: 0vh;
        background: rgba(0, 0, 0, 0.6);
        opacity: 0;
        display: block;
        position: absolute;
        top: 100%;
        right: 0;
        z-index: -1100;
        transition:
          height 0.5s,
          opacity 0.5s;
        -webkit-backdrop-filter: blur(10px);
        backdrop-filter: blur(10px);
      }

      &.cs-active {
        &:before {
          height: 150vh;
          opacity: 1;
        }

        .cs-ul-wrapper {
          opacity: 1;
          transform: scaleY(1);
          transition-delay: 0.15s;
        }

        .cs-li {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .cs-container {
        width: 100%;
        display: flex;
        justify-content: flex-end;
        align-items: center;
      }

      .cs-logo {
        width: 40%;
        max-width: (72/16rem);
        height: 100%;
        margin: 0 auto 0 0;
        /* prevents padding and border from affecting height and width */
        box-sizing: border-box;
        padding: 0;
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 10;

        img {
          width: 100%;
          height: 100%;
          /* ensures the image never overflows the container. It stays contained within it's width and height and expands to fill it then stops once it reaches an edge */
          object-fit: contain;
        }
      }

      .cs-toggle {
        /* 44px - 48px */
        width: clamp(2.75rem, 6vw, 3rem);
        height: clamp(2.75rem, 6vw, 3rem);
        margin: 0 0 0 auto;
        background: linear-gradient(
          135deg,
          #016fe7 0%,
          #4f8fff 50%,
          #016fe7 100%
        );
        background-size: 200% 100%;
        border: none;
        border-radius: (4/16rem);
        display: flex;
        justify-content: center;
        align-items: center;
        box-shadow:
          0 4px 15px rgba(1, 111, 231, 0.4),
          inset 0 1px 0 rgba(255, 255, 255, 0.3);
        transition:
          background-position 0.4s ease,
          box-shadow 0.3s ease,
          transform 0.2s ease;
        position: relative;
        overflow: hidden;

        &:hover {
          background-position: 100% 0;
          box-shadow:
            0 6px 20px rgba(1, 111, 231, 0.6),
            inset 0 1px 0 rgba(255, 255, 255, 0.4);
          transform: translateY(-2px);
          cursor: pointer;
        }

        &:active {
          transform: translateY(0);
          box-shadow:
            0 2px 10px rgba(1, 111, 231, 0.4),
            inset 0 1px 0 rgba(255, 255, 255, 0.2);
        }

        // Elegant reflection overlay
        &:before {
          content: '';
          position: absolute;
          top: 0;
          left: -100%;
          width: 100%;
          height: 100%;
          background: linear-gradient(
            90deg,
            transparent,
            rgba(255, 255, 255, 0.3),
            transparent
          );
          transition: left 0.5s ease;
          z-index: 1;
        }

        &:hover:before {
          left: 100%;
        }

        // Top highlight for glass effect
        &:after {
          content: '';
          position: absolute;
          top: 0;
          left: 0;
          right: 0;
          height: 50%;
          background: linear-gradient(
            to bottom,
            rgba(255, 255, 255, 0.2),
            transparent
          );
          border-radius: (4/16rem) (4/16rem) 0 0;
          pointer-events: none;
          z-index: 1;
        }
      }

      .cs-active {
        .cs-line1 {
          top: 50%;
          transform: translate(-50%, -50%) rotate(225deg);
        }

        .cs-line2 {
          top: 50%;
          transform: translate(-50%, -50%) translateY(0) rotate(-225deg);
          transform-origin: center;
        }

        .cs-line3 {
          opacity: 0;
          bottom: 100%;
        }
      }

      .cs-box {
        /* 24px - 28px */
        width: clamp(1.5rem, 2vw, 1.75rem);
        /* 14px - 16px */
        height: clamp(0.875rem, 1.5vw, 1rem);
        position: relative;
        z-index: 2;
      }

      .cs-line {
        width: 100%;
        height: 2px;
        background-color: #fff;
        border-radius: 2px;
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
      }

      .cs-line1 {
        top: 0;
        transition:
          transform 0.5s,
          top 0.3s,
          left 0.3s;
        animation-duration: 0.7s;
        animation-timing-function: ease;
        animation-direction: normal;
        animation-fill-mode: forwards;
        transform-origin: center;
      }

      .cs-line2 {
        top: 50%;
        transform: translateX(-50%) translateY(-50%);
        transition:
          top 0.3s,
          left 0.3s,
          transform 0.5s;
        animation-duration: 0.7s;
        animation-timing-function: ease;
        animation-direction: normal;
        animation-fill-mode: forwards;
      }

      .cs-line3 {
        bottom: 0;
        transition:
          bottom 0.3s,
          opacity 0.3s;
      }

      .cs-ul-wrapper {
        width: 100%;
        height: auto;
        padding-bottom: (48/20em);
        background-color: #fff;
        box-shadow: inset rgba(0, 0, 0, 0.2) 0px 8px 24px;
        opacity: 0;
        position: absolute;
        top: 100%;
        left: 0;
        z-index: -1;
        overflow: hidden;
        transform: scaleY(0);
        transition:
          transform 0.4s,
          opacity 0.3s;
        transform-origin: top;
      }

      .cs-ul {
        width: 100%;
        height: auto;
        max-height: 65vh;
        margin: 0;
        padding: (48/16rem) 0 0 0;
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        align-items: center;
        gap: (20/16rem);
        overflow: scroll;
      }

      .cs-li {
        text-align: center;
        list-style: none;
        width: 100%;
        margin-right: 0;
        opacity: 0;
        /* transition from these values */
        transform: translateY(-4.375rem);
        transition:
          transform 0.6s,
          opacity 0.9s;

        &:nth-of-type(1) {
          transition-delay: 0.05s;
        }
        &:nth-of-type(2) {
          transition-delay: 0.1s;
        }
        &:nth-of-type(3) {
          transition-delay: 0.15s;
        }
        &:nth-of-type(4) {
          transition-delay: 0.2s;
        }
        &:nth-of-type(5) {
          transition-delay: 0.25s;
        }
        &:nth-of-type(6) {
          transition-delay: 0.3s;
        }
        &:nth-of-type(7) {
          transition-delay: 0.35s;
        }
        &:nth-of-type(8) {
          transition-delay: 0.4s;
        }
        &:nth-of-type(9) {
          transition-delay: 0.45s;
        }
        &:nth-of-type(10) {
          transition-delay: 0.5s;
        }
        &:nth-of-type(11) {
          transition-delay: 0.55s;
        }
        &:nth-of-type(12) {
          transition-delay: 0.6s;
        }
        &:nth-of-type(13) {
          transition-delay: 0.65s;
        }
      }

      .cs-li-link {
        /* 16px - 24px */
        font-size: clamp(1rem, 2.5vw, 1.5rem);
        line-height: 1.2em;
        text-decoration: none;
        margin: 0;
        color: var(--headerColor);
        text-shadow: 0px 1px 1px rgba(0, 0, 0, 0.2);
        display: inline-block;
        position: relative;

        &:before {
          /* active state underline */
          content: '';
          width: 100%;
          height: 1px;
          background: currentColor;
          opacity: 1;
          display: none;
          position: absolute;
          bottom: (-2/16rem);
          left: 0;
        }

        &.cs-active {
          &:before {
            display: block;
          }
        }
      }

      .cs-button-solid {
        display: none;
      }
    }
  }

  /*-- -------------------------- -->
<---     Desktop Navigation     -->
<--- -------------------------- -*/

  /* Small Desktop - 1024px */
  @media only screen and (min-width: 64rem) {
    #cs-navigation {
      width: 100%;
      /* prevents padding and border from affecting height and width */
      box-sizing: border-box;
      padding: 0 (16/16rem);
      background-color: var(--backgroundDark);
      box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
      position: fixed;
      z-index: 10000;

      .cs-container {
        width: 100%;
        max-width: (1280/16rem);
        margin: auto;
        display: flex;
        justify-content: flex-end;
        align-items: center;
        gap: (24/16rem);
      }

      .cs-toggle {
        display: none;
      }

      .cs-logo {
        width: 18.4%;
        max-width: (350/16rem);
        height: (65/16rem);
        /* margin-right auto pushes everything away from it to the right */
        margin: 0 auto 0 0;
        padding: 0;
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 100;

        img {
          width: 100%;
          height: 100%;
          /* ensures the image never overflows the container. It stays contained within it's width and height and expands to fill it then stops once it reaches an edge */
          object-fit: contain;
        }
      }

      .cs-ul {
        width: 100%;
        margin: 0;
        padding: 0;
        display: flex;
        justify-content: flex-start;
        align-items: center;
        /* 20px - 36px */
        gap: clamp(1.25rem, 2.6vw, 2.25rem);
      }

      .cs-li {
        list-style: none;
        padding: (32/16rem) 0;
        /* prevent flexbox from squishing it */
        flex: none;
      }

      .hidden-desktop {
        display: none;
      }

      .cs-li-link {
        /* 14px - 16px */
        font-size: clamp(0.875rem, 1vw, 1rem);
        font-weight: 700;
        line-height: 1.5em;
        text-decoration: none;
        margin: 0;
        color: var(--bodyTextColorWhite);
        text-shadow: 0px 1px 2px rgba(0, 0, 0, 0.5);
        display: block;
        position: relative;
        &:hover {
          &:before {
            width: 100%;
          }
        }

       
        &.cs-active {
          &:before {
            width: 100%;
          }
        }

        &:before {
          /* active state underline */
          content: '';
          width: 0%;
          height: 2px;
          background: var(--primary);
          opacity: 1;
          display: block;
          position: absolute;
          bottom: (0/16rem);
          left: 0;
          transition: width 0.3s;
        }
      }
    }
  }
</style>
