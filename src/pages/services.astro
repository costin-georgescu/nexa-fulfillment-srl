---
import BaseLayout from '..//layouts/BaseLayout.astro';
import CTA from '../components/CTA.astro';
import Landing from '../components/Landing.astro';

// Optimize our landing image and pass it as props to the BaseLayout (for preloading) and Landing (for rendering)
import { getOptimizedImage } from '../js/utils';
import landingImage from '../assets/images/services.jpg'; // <-- THE PATH TO THE ASSET YOU WANT TO PRELOAD - The asset must live in src
const optimizedImage = await getOptimizedImage(landingImage);
---

<BaseLayout
  title='About'
  description='Meta description for the page'
  preloadedImage={optimizedImage}
>
  <!-- <Landing title='Servicii' image={optimizedImage} /> -->

  <!-- ============================================ -->
  <!--                 Content Page                 -->
  <!-- ============================================ -->

  <!-- ============================================ 
    This Stitch is used for content heavy interior pages
    that have no design or layout.  Often times these are 
    content silos where you talk extensively about a topic
    to educate your visitors and rank on Google for the 
    content.  These are great for pages that have a TON
    of content.  Design isn't important here, it's all 
    about making the content accessible and easy to read.
================================================= -->

  <!-- ============================================ -->
  <!--                   Banner                     -->
  <!-- ============================================ -->

  <div id='banner-716'>
    <div class='cs-container'>
      <span class='cs-int-title'>Serviciile noastre</span>
    </div>
    <!--Background Image-->
    <picture class='cs-background'>
      <!--Mobile Image-->
      <source
        media='(max-width: 600px)'
        srcset='/public/assets/images/services.jpg'
      />
      <!--Tablet and above Image-->
      <source
        media='(min-width: 601px)'
        srcset='/public/assets/images/services.jpg'
      />
      <img
        loading='lazy'
        decoding='async'
        src='https://csimg.nyc3.cdn.digitaloceanspaces.com/Images%2FMISC%2Fpills.jpg'
        alt='pills'
        width='1280'
        height='568'
        aria-hidden='true'
      />
    </picture>
  </div>

  <section id='content-page-716'>
    <div class='cs-container'>
      <div class='cs-content'>
        <h2>
          Oferim o solutie completa de externalizare a operatiunilor logistice,
          eliminand provocarile legate de gestionarea stocurilor, procesarea
          comenzilor, ambalare si livrare consumatoare de timp.
        </h2>
        <h3>Depozitare si gestionare stocuri</h3>
        <p>
          Oferim spatii de depozitare moderne si organizate, cu sistem digital
          de gestionare a stocurilor in timp real, pentru acuratete si control
          total.
        </p>
        <h3>Procesare si ambalare comenzi</h3>
        <p>
          Preluam rapid comenzile, le ambalam profesional conform
          specificatiilor fiecarui brand si pregatim expedierile pentru livrare
          <strong>in aceeasi zi. </strong>
        </p>

        <h3>Gestionarea retururilor</h3>
        <p>
          Oferim servicii complete de procesare a retururilor: receptie,
          verificare, reintegrare in stoc sau raportare detaliata, pentru o
          experienta post-vanzare fara probleme.
        </p>

        <h3>Alte servicii</h3>

        <ul>
          <li>Integrare cu platforme e-commerce.</li>
          <li>Intermediere livrare nationala si internationala</li>
          <li>Personalizare ambalaje si inserturi de brand</li>
          <li>Suport clienti (Customer Service â€“ optional sau dedicat)</li>
          <li>Servicii de raportare si analiza</li>
          <li>Servicii de prelucrare si reambalare produse</li>
          <li>
            Scalabilitate in perioade de varf (campanii, Black Friday,
            sarbatori)
          </li>
        </ul>
      </div>
      <div class='cs-image-group'>
        <picture class='cs-picture'>
          <!--Mobile Image-->
          <source
            media='(max-width: 600px)'
            srcset='/public/assets/images/services-left.jpg'
          />
          <!--Tablet and above Image-->
          <source
            media='(min-width: 601px)'
            srcset='/public/assets/images/services-left.jpg'
          />
          <img
            loading='lazy'
            decoding='async'
            src='/public/assets/images/services-left.jpg'
            alt='person'
            width='570'
            height='680'
            aria-hidden='true'
          />
        </picture>
      </div>
    </div>
  </section>
</BaseLayout>

<style lang='less'>
  /*-- -------------------------- -->
<---          Banner            -->
<--- -------------------------- -*/

  /* Mobile - 360px */
  @media only screen and (min-width: 0rem) {
    #banner-716 {
      /* 175px - 200px top */
      padding: clamp(10.9375rem, 10vw, 12.5rem) (16/16rem) (100/16rem);
      position: relative;
      z-index: 1;

      .cs-container {
        text-align: center;
        width: 100%;
        max-width: (1280/16rem);
        margin: auto;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: flex-start;
        flex-direction: column;
        gap: (16/16rem);
      }

      .cs-int-title {
        /* 39px - 61px */
        font-size: clamp(2.4375rem, 6.4vw, 3.8125rem);
        font-weight: 900;
        line-height: 1.2em;
        text-align: inherit;
        margin: 0;
        color: var(--bodyTextColorWhite);
        position: relative;
      }

      .cs-background {
        width: 100%;
        height: 100%;
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;

        &:before {
          /* background color overlay */
          content: '';
          position: absolute;
          display: block;
          height: 100%;
          width: 100%;
          background: #000;
          opacity: 0.75;
          top: 0;
          left: 0;
          z-index: 1;
        }

        img {
          position: absolute;
          top: 0;
          left: 0;
          height: 100%;
          width: 100%;
          /* Makes img tag act as a background image */
          object-fit: cover;
        }
      }
    }
  }

  /* Tablet - 768px */
  @media only screen and (min-width: 48rem) {
    #banner-716 {
      .cs-background {
        &:before {
          opacity: 1;
          background: linear-gradient(
            90.01deg,
            rgba(0, 0, 0, 0.9) 16.86%,
            rgba(0, 0, 0, 0) 100%
          );
        }
      }
    }
  }

  /*-- -------------------------- -->
<---        Content Page        -->
<--- -------------------------- -*/

  /* Mobile - 360px */
  @media only screen and (min-width: 0rem) {
    #content-page-716 {
      padding: var(--sectionPadding);
      /* clips the wave background from causing overflow issues when it goes off screen */
      overflow: hidden;
      position: relative;
      z-index: 1;

      .cs-container {
        width: 100%;
        max-width: (1280/16rem);
        margin: auto;
        display: flex;
        flex-direction: column;
        align-items: center;
        /* 48px - 64px */
        gap: clamp(3rem, 6vw, 4rem);
        position: relative;
      }

      .cs-content {
        /* set text align to left if content needs to be left aligned */
        text-align: left;
        width: 100%;
        max-width: (738/16rem);
        display: flex;
        flex-direction: column;
        /* centers content horizontally, set to flex-start to left align */
        align-items: flex-start;

        img {
          width: 100%;
          height: auto;
          margin: (16/16rem);
          display: block;
        }
      }

      h2,
      h3,
      h4,
      h5,
      h6 {
        font-weight: 700;
        text-align: inherit;
        margin: 0 0 (16/16rem) 0;
      }

      h2 {
        font-size: (32/16rem);
      }

      h4,
      h5,
      h6 {
        font-size: (20/16rem);
      }

      .cs-button-solid {
        margin-bottom: (32/16rem);
      }

      .cs-color {
        color: var(--primary);
      }

      p {
        font-size: var(--bodyFontSize);
        line-height: 1.5em;
        text-align: inherit;
        width: 100%;
        margin: 0 0 (16/16rem) 0;
        color: var(--bodyTextColorGray);
        &:last-of-type {
          margin-bottom: (32/16rem);
        }

        a {
          font-size: inherit;
          line-height: inherit;
          text-decoration: underline;
          color: var(--primary);
        }
      }

      ol,
      ul {
        padding-left: (24/16rem);
        margin: 0 0 (32/16rem) 0;
        color: var(--bodyTextColorGray);
        display: flex;
        flex-direction: column;
        gap: (16/16rem);
      }

      ul {
        li {
          list-style: none;
          color: inherit;
          position: relative;

          &:before {
            /* custom list bullet */
            content: '';
            width: 3px;
            height: 3px;
            background: currentColor;
            opacity: 1;
            border-radius: 50%;
            position: absolute;
            display: block;
            top: (10/16rem);
            left: (-12/16rem);
          }
        }
      }

      .cs-image-group {
        /* scales the whole section down and ties the font size to the vw and stops at 70% of the vale of 1em, changes at desktop */
        font-size: ~'min(1vw, 1em)';
        /* everything inside this box is in ems so we can scale it all down proportionally with a font size */
        width: (542/16em);
        height: (773/16em);
        display: none;
        /* prevents flexbox from squishing it */
        flex: none;
        position: relative;
        z-index: 1;
      }

      .cs-picture {
        width: (542/16em);
        height: (647/16em);
        /* prevents border from affecting height and width */
        box-sizing: border-box;
        /* clips img tag corners */
        overflow: hidden;
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.15));

        img {
          width: 100%;
          height: 100%;
          /* makes it act like a background image */
          object-fit: cover;
          position: absolute;
          top: 0;
          left: 0;
        }
      }

      .cs-background {
        display: none;
      }
    }
  }

  /* Tablet - 768px */
  @media only screen and (min-width: 48rem) {
    #content-page-716 {
      .cs-container {
        flex-direction: row;
        align-items: flex-start;
      }

      .cs-image-group {
        display: block;
        /* sends it to the left in the 1st position */
        order: -1;
      }

      .cs-content {
        margin-left: auto;
      }

      .cs-background {
        width: 20%;
        height: 100%;
        background-color: #f7f7f7;
        display: block;
        position: absolute;
        left: 0;
        top: 0;
        z-index: -1;

        img {
          width: 100%;
          height: 100%;
          opacity: 0.2;
          object-fit: cover;
          position: absolute;
          top: 0;
          left: 0;
          z-index: 1;
        }
      }
    }
  }

  /* Large Desktop 1300px */
  @media only screen and (min-width: 81.25rem) {
    #content-page-716 {
      .cs-image-group {
        /* position absolute so we can have it overflow the container as seen in the design. */
        font-size: inherit;
        position: absolute;
        top: (0/16rem);
        left: (-100/16rem);
      }

      .cs-background {
        width: 50%;
        /* with the left edge always positioned at the center line, we push right of the center line by 335px.  This ensures that this element will stay exactly in this position no matter hoe wide the screen gets */
        margin-right: (335/16rem);
        left: auto;
        /* sets the right edge of the element to be at the center line */
        right: 50%;
      }
    }
  }
</style>
