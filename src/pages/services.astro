---
import BaseLayout from '..//layouts/BaseLayout.astro';
import CTA from '../components/CTA.astro';
import Landing from '../components/Landing.astro';

// Optimize our landing image and pass it as props to the BaseLayout (for preloading) and Landing (for rendering)
import { getOptimizedImage } from '../js/utils';
import landingImage from '../assets/images/services.jpg'; // <-- THE PATH TO THE ASSET YOU WANT TO PRELOAD - The asset must live in src
const optimizedImage = await getOptimizedImage(landingImage);
---

<BaseLayout
  title='About'
  description='Meta description for the page'
  preloadedImage={optimizedImage}
>
  <!-- ============================================ -->
  <!--                 Interior Page                -->
  <!-- ============================================ -->

  <Landing title='Servicii' image={optimizedImage} />

  <section id='content-page-715'>
    <div class='cs-container'>
      <div class='cs-content'>
        <h1 class='cs-title'>
          Soluții personalizate și scalabile de <span class='cs-color'
            >fulfillment.</span
          >
        </h1>
        <h2>
          Oferim o solutie completa de externalizare a operatiunilor logistice,
          eliminand provocarile legate de gestionarea stocurilor, procesarea
          comenzilor, ambalare si livrare consumatoare de timp.
        </h2>
        <h3>Heading 3</h3>
        <h4>Heading 4-6</h4>
        <p>
          Lorem ipsum dolor sit amet consectetur adipisicing elit. Veritatis
          laboriosam eum quae in temporibus cumque tempora expedita mollitia
          nostrum adipisci, ipsum commodi, cupiditate, sequi quos enim! Quaerat
          esse non sunt! Lorem ipsum dolor sit amet <a href=''>link example</a>.
          Est, quis!
        </p>
        <p>
          Lorem ipsum dolor sit amet consectetur adipisicing elit. Veritatis
          laboriosam eum quae in temporibus cumque tempora expedita mollitia
          nostrum <strong>adipisci, ipsum commodi</strong>, cupiditate, sequi
          quos enim!
        </p>
        <h3>Heading 3</h3>
        <ol>
          <li>Lorem ipsum dolor sit amet consectetur adipisicing elit.</li>
          <li>Lorem ipsum dolor sit amet consectetur adipisicing elit.</li>
          <li>Lorem ipsum dolor sit amet consectetur adipisicing elit.</li>
        </ol>
        <h4>Heading 4-6</h4>
        <ul>
          <li>Lorem ipsum dolor sit amet consectetur adipisicing elit.</li>
          <li>Lorem ipsum dolor sit amet consectetur adipisicing elit.</li>
          <li>Lorem ipsum dolor sit amet consectetur adipisicing elit.</li>
        </ul>
      </div>
      <div class='cs-image-group'>
        <picture class='cs-picture'>
          <!--Mobile Image-->
          <source
            media='(max-width: 600px)'
            srcset='/public/assets/images/2.jpg'
          />
          <!--Tablet and above Image-->
          <source
            media='(min-width: 601px)'
            srcset='/public/assets/images/2.jpg'
          />
          <img
            loading='lazy'
            decoding='async'
            src='/public/assets/images/2.jpg'
            alt='person'
            width='570'
            height='680'
          />
        </picture>
      </div>
    </div>
  </section>
</BaseLayout>

<style lang='less'>
  /*-- -------------------------- -->
<---          Interior page       -->
<--- -------------------------- -*/

  /* Tablet - 768px */
  @media only screen and (min-width: 48rem) {
    #banner-715 {
      .cs-background {
        &:before {
          opacity: 1;
          background: linear-gradient(
            90.01deg,
            rgba(0, 0, 0, 0.9) 16.86%,
            rgba(0, 0, 0, 0) 100%
          );
        }
      }
    }
  }

  /*-- -------------------------- -->
<---        Content Page        -->
<--- -------------------------- -*/

  /* Mobile - 360px */
  @media only screen and (min-width: 0rem) {
    #content-page-715 {
      padding: var(--sectionPadding);
      /* clips the wave background from causing overflow issues when it goes off screen */
      overflow: hidden;
      position: relative;
      z-index: 1;

      .cs-container {
        width: 100%;
        max-width: (1280/16rem);
        margin: auto;
        display: flex;
        flex-direction: column;
        align-items: center;
        /* 48px - 64px */
        gap: clamp(3rem, 6vw, 4rem);
        position: relative;
      }

      .cs-content {
        /* set text align to left if content needs to be left aligned */
        text-align: left;
        width: 100%;
        max-width: (738/16rem);
        display: flex;
        flex-direction: column;
        /* centers content horizontally, set to flex-start to left align */
        align-items: flex-start;

        img {
          width: 100%;
          height: auto;
          margin: (16/16rem) 0;
          display: block;
        }
      }
      h2,
      h3,
      h4,
      h5,
      h6 {
        font-weight: 700;
        text-align: inherit;
        margin: 0 0 (16/16rem) 0;
        color: var(--headerColor);
      }

      h2 {
        font-size: (32/16rem);
        margin-top: (32/16rem);
        color: var(--bodyTextColorGray);
      }

      h3 {
        font-size: (24/16rem);
        color: var(--primary);
      }

      h4,
      h5,
      h6 {
        font-size: (20/16rem);
      }

      .cs-button-solid {
        margin-bottom: (32/16rem);
      }

      .cs-color {
        color: var(--primary);
      }

      p {
        font-size: var(--bodyFontSize);
        line-height: 1.5em;
        text-align: inherit;
        width: 100%;
        margin: 0 0 (16/16rem) 0;
        color: var(--bodyTextColor);
        &:last-of-type {
          margin-bottom: (32/16rem);
        }

        a {
          font-size: inherit;
          line-height: inherit;
          text-decoration: underline;
          color: var(--primary);
        }
      }

      ol,
      ul {
        padding-left: (24/16rem);
        margin: 0 0 (32/16rem) 0;
        color: var(--bodyTextColor);
        display: flex;
        flex-direction: column;
        gap: (16/16rem);
      }

      ul {
        li {
          list-style: none;
          color: inherit;
          position: relative;

          &:before {
            /* custom list bullet */
            content: '';
            width: 3px;
            height: 3px;
            background: currentColor;
            opacity: 1;
            border-radius: 50%;
            position: absolute;
            display: block;
            top: (10/16rem);
            left: (-12/16rem);
          }
        }
      }

      .cs-image-group {
        /* scales the whole section down and ties the font size to the vw and stops at 70% of the vale of 1em, changes at desktop */
        font-size: ~'min(1vw, 1em)';
        /* everything inside this box is in ems so we can scale it all down proportionally with a font size */
        width: (542/16em);
        height: (773/16em);
        display: none;
        /* prevents flexbox from squishing it */
        flex: none;
        position: relative;
        /* flips it horizontally */
        transform: scaleX(-1);
      }

      .cs-picture {
        width: (542/16em);
        height: (647/16em);
        // border-radius: (285/16em);
        border: (12/16em) solid #fff;
        background-color: #f7f7f7;
        /* prevents border from affecting height and width */
        box-sizing: border-box;
        /* clips img tag corners */
        overflow: hidden;
        display: block;
        position: absolute;
        top: 0;
        left: 0;

        img {
          width: 100%;
          height: 100%;
          /* makes it act like a background image */
          object-fit: cover;
          position: absolute;
          top: 0;
          left: 0;
          /* flips the image to its original orientation */
          transform: scaleX(-1);
        }
      }
    }
  }

  /* Tablet - 768px */
  @media only screen and (min-width: 48rem) {
    #content-page-715 {
      .cs-container {
        flex-direction: row;
        align-items: flex-start;
      }

      .cs-image-group {
        display: block;
      }

      .cs-background {
        width: 20%;
        height: 100%;
        background-color: #f7f7f7;
        display: block;
        position: absolute;
        right: 0;
        top: 0;
        z-index: -1;

        img {
          width: 100%;
          height: 100%;
          opacity: 0.2;
          object-fit: cover;
          position: absolute;
          top: 0;
          left: 0;
          z-index: 1;
        }
      }
    }
  }

  /* Large Desktop 1300px */
  @media only screen and (min-width: 81.25rem) {
    #content-page-715 {
      .cs-image-group {
        /* position absolute so we can have it overflow the container as seen in the design. */
        font-size: inherit;
        position: absolute;
        top: (0/16rem);
        right: (-100/16rem);
      }
    }
  }
</style>
